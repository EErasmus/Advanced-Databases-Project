CREATE VIEW x_faculty_stage AS
    SELECT
        'Faculty of Anthropology'  name,
        'X'                        stem,
        NULL                       professional
    FROM
        dual
    UNION
    SELECT
        'Faculty of Architecture',
        NULL,
        'X'
    FROM
        dual
    UNION
    SELECT
        'Faculty of Arts and Humanities',
        NULL,
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of Chemistry',
        'X',
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of Civil Engineering',
        'X',
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of Computer Science and Management',
        'X',
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of Electrical Engineering',
        'X',
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of Electronics',
        'X',
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of English',
        NULL,
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of Environmental Engineering',
        'X',
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of Fundamental Problems of Technology',
        'X',
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of Geoengineering, Mining and Geology',
        'X',
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of History',
        NULL,
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of Mechanical Engineering',
        'X',
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of Mechanical and Power Engineering',
        'X',
        NULL
    FROM
        dual
    UNION
    SELECT
        'Faculty of Microsystem Electronics and Photonics',
        'X',
        NULL
    FROM
        dual;

COMMIT;

SELECT
    *
FROM
    x_faculty_state;

SELECT
    MAX(length(name)),
    MAX(length(stem)),
    MAX(length(professional))
FROM
    x_faculty_stage;

DROP TABLE faculty;

CREATE TABLE faculty (
    faculty_id     INTEGER
        GENERATED BY DEFAULT AS IDENTITY START WITH 1000,
    faculty_name   VARCHAR2(50 CHAR),
    year_founded   INTEGER,
    building       VARCHAR2(2 CHAR),
    stem           VARCHAR2(1 CHAR),
    professional   VARCHAR2(1 CHAR),
    university_id  INTEGER,
    address_id     INTEGER
);

COMMIT;

INSERT INTO faculty (
    faculty_name,
    stem,
    professional,
    university_id
)
    SELECT
        xf.name,
        xf.stem,
        xf.professional,
        uni.university_id
    FROM
             x_faculty_stage xf
        CROSS JOIN university uni;

COMMIT;


SELECT
    *
FROM
    faculty;

--update the date founded

MERGE INTO faculty
USING (
          SELECT
              f.faculty_id,
              u.university_id,
              u.address_id,
              trunc(dbms_random.value(10, 30))           bldg,
              CASE
                  WHEN f.stem IS NULL THEN
                      trunc(dbms_random.value(u.year_founded, u.year_founded + 5))
                  ELSE
                      trunc(dbms_random.value(u.year_founded, u.year_founded + 5))
              END                                        year_founded
          FROM
                   faculty f
              JOIN university u ON ( f.university_id = u.university_id )
      )
f_stage ON ( faculty.faculty_id = f_stage.faculty_id )
WHEN MATCHED THEN UPDATE
SET faculty.year_founded = f_stage.year_founded,
    faculty.address_id = f_stage.address_id,
    faculty.building = f_stage.bldg;

COMMIT;

SELECT
    faculty_id, faculty_name, f.university_id, u.university_name
FROM
    faculty f join university u on (f.university_id = u.university_id)


