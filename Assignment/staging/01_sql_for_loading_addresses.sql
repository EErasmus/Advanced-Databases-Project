--ALTER SESSION SET container = xepdb1;
--
--SELECT
--    COUNT(*)
--FROM
--    us_zipcodes;
--
--SELECT
--    *
--FROM
--    us_addresses_subset;
--
--SELECT
--    street_number,
--    street, 
--
--CREATE TABLE us_addresses_subset
--    AS
--        SELECT
--            *
--        FROM
--            (
--                SELECT
--                    street_number,
--                    street,
--                    postcode
--                FROM
--                    us_addresses
--                WHERE
--                    postcode IS NOT NULL
--                    AND length(TRIM(postcode)) > 0
--                ORDER BY
--                    dbms_random.random
--            )
--        WHERE
--            ROWNUM < 2540000;

--select state, count(*) from (
create view x_us_addresses_subset_final AS
SELECT
    upper(addr.street_number) street_number,
    upper(addr.street) street,
    zip.primary_city city,
    zip.state state,
    zip.country country,
    lpad(zip.zip, 5, '0') postal_code
FROM
         (
        SELECT
            *
        FROM
            us_addresses_subset
        WHERE
            street_number IS NOT NULL
            AND street IS NOT NULL
    ) addr
    JOIN us_zipcodes zip ON ( lpad(zip.zip,5,'0') = lpad( substr(addr.postcode, 0, 5),5,'0') )
--)
--group by state
--order by count(*)

-- CREATE THE ADDRESS TABLE --
DROP TABLE address;

CREATE TABLE address (
    address_id      INTEGER GENERATED BY DEFAULT AS IDENTITY START WITH 1000,
    name            VARCHAR2(70 CHAR),
    addr1           VARCHAR2(80 CHAR),
    addr2           VARCHAR2(80 CHAR),
    postal_code     VARCHAR2(15 CHAR),
    city            VARCHAR2(30 CHAR),
    state           VARCHAR2(2 CHAR),
    country         VARCHAR2(50),
    alternate_form  VARCHAR2(200 CHAR)
);

ALTER TABLE address ADD CONSTRAINT address_pk PRIMARY KEY ( address_id );

-- LOAD THE ADDRESS TABLE --
INSERT INTO address (
    addr1,
    postal_code,
    city,
    state,
    country,
    alternate_form
)
    SELECT
        usa.street_number
        || ' '
        || usa.street,
        usa.postal_code,
        upper(usa.city),
        usa.state,
        'USA',
        usa.street_number
        || ' '
        || usa.street
        || '\n'
        || usa.city
        || ', '
        || usa.state
        || ' '
        || usa.postal_code
    FROM
        us_addresses_subset_final usa;

-- remove ugly data    
DELETE
FROM
    address
WHERE
    addr1 LIKE '%0000%';
commit;

